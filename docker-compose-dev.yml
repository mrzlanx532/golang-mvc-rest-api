version: '3'

networks:
  golang-mvc-rest-api:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_golang_mvc_rest_api
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html:delegated
      - ./.docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - golang
      - mysql
    networks:
      - golang-mvc-rest-api

  mysql:
    image: mysql:8.0
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    container_name: mysql_golang_mvc_rest_api
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/mysql/data:/var/lib/mysql:delegated
      - ./.docker/mysql/scripts:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - golang-mvc-rest-api

  golang:
    build:
      dockerfile: ./.docker/golang/dev/Dockerfile
    container_name: golang_golang_mvc_rest_api
    volumes:
      - .:/usr/src/app:delegated
    entrypoint: /usr/scr/app/.docker/golang/dev/entrypoint.sh
    depends_on:
      - mysql
    ports:
      - "2345:2345"
      - "8080:8080"
    command: "--listen=:2345 --headless=true --log=true --log-output=debugger,debuglineerr,gdbwire,lldbout,rpc --accept-multiclient --api-version=2 exec /usr/src/app/cmd/api/main"
    networks:
      - golang-mvc-rest-api